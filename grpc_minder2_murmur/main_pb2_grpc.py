# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from grpc_minder2_murmur import database_pb2 as grpc__minder2__murmur_dot_database__pb2
from grpc_minder2_murmur import main_pb2 as grpc__minder2__murmur_dot_main__pb2
from grpc_minder2_murmur import murmur_pb2 as grpc__minder2__murmur_dot_murmur__pb2


class MurmurServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/grpc_minder2_murmur.MurmurService/Create',
        request_serializer=grpc__minder2__murmur_dot_murmur__pb2.MurmurContainer.SerializeToString,
        response_deserializer=grpc__minder2__murmur_dot_main__pb2.Void.FromString,
        )
    self.Destroy = channel.unary_unary(
        '/grpc_minder2_murmur.MurmurService/Destroy',
        request_serializer=grpc__minder2__murmur_dot_murmur__pb2.DestroyRequest.SerializeToString,
        response_deserializer=grpc__minder2__murmur_dot_main__pb2.Void.FromString,
        )
    self.GetImage = channel.unary_unary(
        '/grpc_minder2_murmur.MurmurService/GetImage',
        request_serializer=grpc__minder2__murmur_dot_murmur__pb2.MurmurContainer.SerializeToString,
        response_deserializer=grpc__minder2__murmur_dot_murmur__pb2.MurmurContainer.FromString,
        )


class MurmurServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Destroy(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MurmurServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=grpc__minder2__murmur_dot_murmur__pb2.MurmurContainer.FromString,
          response_serializer=grpc__minder2__murmur_dot_main__pb2.Void.SerializeToString,
      ),
      'Destroy': grpc.unary_unary_rpc_method_handler(
          servicer.Destroy,
          request_deserializer=grpc__minder2__murmur_dot_murmur__pb2.DestroyRequest.FromString,
          response_serializer=grpc__minder2__murmur_dot_main__pb2.Void.SerializeToString,
      ),
      'GetImage': grpc.unary_unary_rpc_method_handler(
          servicer.GetImage,
          request_deserializer=grpc__minder2__murmur_dot_murmur__pb2.MurmurContainer.FromString,
          response_serializer=grpc__minder2__murmur_dot_murmur__pb2.MurmurContainer.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpc_minder2_murmur.MurmurService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class DatabaseServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Create = channel.unary_unary(
        '/grpc_minder2_murmur.DatabaseService/Create',
        request_serializer=grpc__minder2__murmur_dot_database__pb2.DatabaseContainer.SerializeToString,
        response_deserializer=grpc__minder2__murmur_dot_main__pb2.Void.FromString,
        )
    self.Destroy = channel.unary_unary(
        '/grpc_minder2_murmur.DatabaseService/Destroy',
        request_serializer=grpc__minder2__murmur_dot_database__pb2.DestroyRequest.SerializeToString,
        response_deserializer=grpc__minder2__murmur_dot_main__pb2.Void.FromString,
        )


class DatabaseServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Create(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Destroy(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DatabaseServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Create': grpc.unary_unary_rpc_method_handler(
          servicer.Create,
          request_deserializer=grpc__minder2__murmur_dot_database__pb2.DatabaseContainer.FromString,
          response_serializer=grpc__minder2__murmur_dot_main__pb2.Void.SerializeToString,
      ),
      'Destroy': grpc.unary_unary_rpc_method_handler(
          servicer.Destroy,
          request_deserializer=grpc__minder2__murmur_dot_database__pb2.DestroyRequest.FromString,
          response_serializer=grpc__minder2__murmur_dot_main__pb2.Void.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpc_minder2_murmur.DatabaseService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
